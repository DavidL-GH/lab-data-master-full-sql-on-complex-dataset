CREATE OR REPLACE TABLE S_ORDERS_TRANSFORMED (
  ID_ORDER STRING,
  DTE_ORDER DATE,
  ID_CUSTOMER STRING,
  ID_PART STRING,
  QTY_ORDERED NUMBER,
  AMT_TOTAL NUMBER(12,2),
  REF_PAYMENT_METHOD STRING,
  DTE_DELIVERY_EST DATE,
  DES_ORDER_NOTE STRING,
  CAT_ORDER_TYPE STRING,
  TYP_CUSTOMER_SEGMENT STRING,
  REF_DISCOUNT_CODE STRING,
  QTY_UNITS_BACKORDER NUMBER,
  TST_INSERTION TIMESTAMP,
  AUD_USR_INSERT STRING
);

----2 LIMPIEZA Y CARGA DE DATOS
INSERT INTO S_ORDERS_TRANSFORMED
SELECT
  ID_ORDER,
  TRY_TO_DATE(DTE_ORDER, 'YYYY-MM-DD'),
  ID_CUSTOMER,
  CASE WHEN ID_PART != 'ERROR' THEN ID_PART ELSE NULL END,
  CASE 
    WHEN TRY_TO_NUMBER(QTY_ORDERED) IS NOT NULL AND TRY_TO_NUMBER(QTY_ORDERED) > 0 THEN TRY_TO_NUMBER(QTY_ORDERED)
    ELSE NULL
  END,
  TRY_TO_NUMBER(AMT_TOTAL),
  NULLIF(UPPER(REF_PAYMENT_METHOD), ''),
  TRY_TO_DATE(DTE_DELIVERY_EST, 'YYYY-MM-DD'),
  DES_ORDER_NOTE,
  NULLIF(CAT_ORDER_TYPE, ''),
  NULLIF(TYP_CUSTOMER_SEGMENT, ''),
  CASE WHEN REF_DISCOUNT_CODE IN ('SUMMER20', 'BLACKFRIDAY') THEN REF_DISCOUNT_CODE ELSE NULL END,
  CASE WHEN TRY_TO_NUMBER(QTY_UNITS_BACKORDER) IS NOT NULL THEN TRY_TO_NUMBER(QTY_UNITS_BACKORDER) ELSE NULL END,
  TRY_TO_TIMESTAMP(TST_INSERTION),
  AUD_USR_INSERT
FROM B_ORDERS_RAW_COMPLEX_WIDE;

-- 1. Ver cuÃ¡ntos registros tienen al menos un campo importante nulo
SELECT COUNT(*) AS NUM_REGISTROS_NULOS
FROM S_ORDERS_TRANSFORMED
WHERE DTE_ORDER IS NULL 
   OR QTY_ORDERED IS NULL
   OR AMT_TOTAL IS NULL
   OR REF_PAYMENT_METHOD IS NULL;

-- 2. Pedidos con descuento y alto importe
SELECT ID_ORDER, AMT_TOTAL, REF_DISCOUNT_CODE
FROM S_ORDERS_TRANSFORMED
WHERE REF_DISCOUNT_CODE IS NOT NULL AND AMT_TOTAL > 1000;

-- 3. Clientes VIP con pedidos incompletos
SELECT *
FROM S_ORDERS_TRANSFORMED
WHERE TYP_CUSTOMER_SEGMENT = 'VIP' AND QTY_UNITS_BACKORDER > 0;

BEGIN;

UPDATE S_ORDERS_TRANSFORMED
SET AMT_TOTAL = AMT_TOTAL * 0.95
WHERE REF_DISCOUNT_CODE = 'BLACKFRIDAY';

ROLLBACK;

-- Confirmar descuento si revisado
UPDATE S_ORDERS_TRANSFORMED
SET AMT_TOTAL = AMT_TOTAL * 0.95
WHERE REF_DISCOUNT_CODE = 'BLACKFRIDAY';

COMMIT;

GRANT SELECT, INSERT ON S_ORDERS_TRANSFORMED TO ROLE BI_ANALYST;

REVOKE INSERT ON S_ORDERS_TRANSFORMED FROM ROLE BI_ANALYST;
